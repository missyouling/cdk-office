version: '3.8'

services:
  # CDK-Office backend service
  cdk-office:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://cdkoffice:cdkoffice@postgres:5432/cdkoffice?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - DIFY_API_KEY=${DIFY_API_KEY}
      - DIFY_BASE_URL=${DIFY_BASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - APP_ENV=production
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - cdk-office-network

  # PostgreSQL database
  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=cdkoffice
      - POSTGRES_USER=cdkoffice
      - POSTGRES_PASSWORD=cdkoffice
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - cdk-office-network

  # Redis cache
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - cdk-office-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://cdk-office:8080
      - NEXT_PUBLIC_DIFY_API_URL=${DIFY_BASE_URL}
    depends_on:
      - cdk-office
    restart: unless-stopped
    networks:
      - cdk-office-network

volumes:
  postgres_data:
  redis_data:

networks:
  cdk-office-network:
    driver: bridge